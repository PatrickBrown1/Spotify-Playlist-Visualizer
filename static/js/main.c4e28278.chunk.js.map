{"version":3,"sources":["vinyl-record-svgrepo-com.svg","config.js","hash.js","pages/HomePage.js","PlaylistCard.js","APIHandler.js","SongGraph.js","ArtistPieGraph.js","SongTable.js","pages/AnalysisPage.js","pages/DataPage.js","pages/AboutPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","scopes","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","HomePage","class","id","src","RecordSVG","alt","height","width","this","props","auth_token","type","className","href","join","to","Component","PlaylistCard","classes","makeStyles","theme","card","display","transition","opacity","filter","boxShadow","cardGrayscale","textContainer","flexDirection","padding","margin","titlePadding","albumImage","minHeight","minWidth","maxHeight","maxWidth","infoContainer","color","fontStyle","useStyles","playlistName","playlistObject","name","playlistNumTracks","tracks","total","playlistOwner","owner","display_name","imageArray","images","collaborative","toBeUsed","Card","bordered","onClick","handleCardClick","CardMedia","component","image","url","title","CardContent","Typography","align","variant","Divider","fetchAxios","token","call_url","a","axios","method","headers","then","data","catch","error","response","console","log","status","request","message","getUserInformation","getPlaylistNames","fetchAllPlaylists","all_playlists_array","next_page_exists","current_url","limit","offset","paging_object","next","concat","items","getAllSongs","first_page","all_songs_playlist","current_page","i","current_call_songs","call","len","length","push","track","timeToWait","parseInt","timeout","getSongObjects","songArrayVar","songArray","slice","song_object_list","call_link","songs_left","id_list","pop","params","ids","audio_features","forEach","songObj","song_analysis","createChartData","domain","range","dataset","domainName","rangeName","allSongsArray","undefined","x","y","label_text","SongGraph","root","titlediv","dropdownDiv","dropdownItem","alignItems","dropDown","pointerEvents","labelText","graphDiv","React","useState","setDomain","setRange","setUpdateView","domainObj","calculateDomain","options","Box","titleDiv","onChange","option","value","placeholder","VictoryTheme","material","style","fill","size","labels","datum","labelComponent","events","target","eventHandlers","onMouseEnter","mutation","text","onMouseLeave","crossAxis","label","standalone","axisLabelComponent","dy","dependentAxis","ArtistPieGraph","state","popularArtistPieChart","bind","legendData","artistToSongMapVar","artistToSongMap","biggestArtistList","smallerArtistList","compare","b","numA","numB","comparison","Object","keys","key","nameArtist","numSongs","sort","smallestArtist","obj","numOther","chartData","viewBox","overflow","centerTitle","top","bottom","left","borderPadding","right","colorScale","border","stroke","center","cornerRadius","pointerLength","flyoutPadding","flyoutStyle","onMouseOver","setState","A","active","onMouseOut","descendingComparator","orderBy","localeCompare","EnhancedTableHeader","order","onRequestSort","TableHead","TableRow","displayLabel","map","header","TableCell","sortDirection","TableSortLabel","direction","property","event","SongTable","songList","artists","count","artistObj","songname","album","acousticness","danceability","energy","instrumentalness","liveness","loudness","speechiness","valence","tempo","createData","rows","setOrder","setOrderBy","Paper","TableContainer","Table","stickyHeader","aria-label","TableBody","array","comparator","stabilizedThis","el","index","stableSort","getComparator","row","hover","scope","AnalysisPage","createSongArray","calculateMostPopularGenre","createArtistToSongMap","createAnalysisArray","handleTabSwitch","renderTab","renderPopularArtistTab","renderSongScatterTab","updateWindowDimensions","renderSongChart","loading","addEventListener","filteredPlaylists","allSongs","musicAnalysisArray","find","currentTab","removeEventListener","innerWidth","innerHeight","playlists","promiseList","numPlaylists","playlist","callURL","Promise","all","uniqueSongsArray","_","uniqBy","songsList","analysisPromise","artistDictionary","song","artistObject","artistSongArray","some","e","pageName","tabName","divHeight","divWidth","dataPage","Button","DataPage","user_info","no_user_data","no_playlist_data","number_playlists","showAnalysis","numSelectedPlaylists","removeNonOwnedPlaylists","createPlaylistCards","selectAllPlaylists","deselectAllPlaylists","handleGoClick","filterPlaylists","selectOwnedPlaylists","_token","access_token","userInfo","playlists_data","clearInterval","interval","owned_playlists","Grid","container","justify","spacing","playlistObj","xs","tempPlaylists","numSelectedDelta","prevState","playlistsIncluded","filteredArray","numTotalPlaylists","cardList","elevation","py","marginTop","AboutPage","App","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c4e28278.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vinyl-record-svgrepo-com.d364111c.svg\";","export const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Replace with your app's client ID, redirect URI and desired scopes\nexport const clientId = \"ba5c71353dfa472db62a421dab61053a\";\nexport const redirectUri =\n  \"https://PatrickBrown1.github.io/Spotify-Playlist-Visualizer/data\";\nexport const scopes = [\"user-top-read\", \"playlist-read-private\"];\n","// Get the hash of the url\nconst hash = window.location.hash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function(initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\nwindow.location.hash = \"\";\n\nexport default hash;","import React, { Component } from \"react\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"../config\";\nimport hash from \"../hash\";\nimport axios from 'axios';\nimport \"./HomePage.css\";\nimport { Button } from 'antd';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport RecordSVG from \"../vinyl-record-svgrepo-com.svg\";\nexport default class HomePage extends Component {\n  constructor() {\n    super();\n  }\n\n  async componentDidMount() {\n    // Set token\n  }\n\n  componentWillUnmount() {\n\n  }\n  render() {\n\n    return (\n      <div class=\"grid-container\">\n        <div class=\"item white-bg\"></div>\n        <div class=\"item white-bg\"></div>\n        <div class=\"item white-bg right-border\"></div>\n        <div class=\"item navy-bg left-border\"></div>\n        <div class=\"item navy-bg\"></div>\n        <div class=\"item white-bg\"></div>\n        <div class=\"item white-bg\">\n          <div> \n            <h1 class=\"title-header\">Playlist Analyzer</h1>\n          </div>\n          <div>\n            <h2 class=\"subtitle-header\">Discover your music</h2>\n          </div>\n        </div>\n        <div class=\"circle-item\">\n          <div id=\"record-container\">\n            <img \n              id=\"record\"\n              src={RecordSVG} \n              alt=\"record\"\n              height=\"90%\"\n              width=\"90%\" />\n          </div>\n        </div>\n        <div class=\"item navy-bg\"></div>\n        <div class=\"item white-bg\"></div>\n        <div class=\"item white-bg\">\n          {!this.props.auth_token && (\n              <Button type=\"primary\" className=\"main-button\" href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n                \"%20\"\n              )}&response_type=token&show_dialog=true`} >\n                Login to Spotify\n              </Button>\n          )}\n          {this.props.auth_token && (\n            <Link to=\"/data\">\n              <Button type=\"primary\" className=\"main-button\">\n                Explore\n              </Button>\n            </Link>\n          )}\n        </div>\n        <div class=\"item navy-bg\"></div>\n        <div class=\"item white-bg\"></div>\n        <div class=\"item white-bg\"></div>\n        <div class=\"item white-bg right-border\"></div>\n        <div class=\"item navy-bg left-border\"></div>\n        <div class=\"item navy-bg\"></div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nvar PlaylistCard = function (props) {\n  const useStyles = makeStyles((theme) => ({\n    card: {\n      display: \"flex\",\n      transition: \"box-shadow 0.2s\",\n      height: \"17vw\",\n      width: \"34vw\",\n      opacity: 1,\n      filter: \"grayscale(0%)\",\n      \"&:hover\": {\n        transition: \"box-shadow 0.2s\",\n        boxShadow:\n          \"0 3px 6px -4px rgba(0, 0, 0, 0.36), 0 6px 16px 0 rgba(0, 0, 0, 0.24), 0 9px 28px 8px rgba(0, 0, 0, 0.15)\",\n      },\n    },\n    cardGrayscale: {\n      display: \"flex\",\n      transition: \"box-shadow 0.2s\",\n      height: \"17vw\",\n      width: \"34vw\",\n      opacity: 1,\n      filter: \"grayscale(0%)\",\n      \"&:hover\": {\n        transition: \"box-shadow 0.2s\",\n        boxShadow:\n          \"0 3px 6px -4px rgba(0, 0, 0, 0.36), 0 6px 16px 0 rgba(0, 0, 0, 0.24), 0 9px 28px 8px rgba(0, 0, 0, 0.15)\",\n      },\n      opacity: \"0.4\",\n      filter: \"grayscale(70%)\",\n    },\n    textContainer: {\n      display: \"flex 1 0 auto\",\n      flexDirection: \"column\",\n      width: \"17vw\",\n      height: \"17vw\",\n      padding: \"5px\",\n      margin: 0,\n    },\n    titlePadding: {\n      padding: \"10px\",\n    },\n    albumImage: {\n      minHeight: \"17vw\",\n      minWidth: \"17vw\",\n      maxHeight: \"17vw\",\n      maxWidth: \"17vw\",\n    },\n    infoContainer: {\n      color: \"black\",\n      width: \"100%\",\n      \"& span\": {\n        fontStyle: \"bold\",\n      },\n      padding: \"10px\",\n    },\n  }));\n  const classes = useStyles();\n\n  const playlistName = props.playlistObject.name;\n  const playlistNumTracks = props.playlistObject.tracks.total;\n  const playlistOwner = props.playlistObject.owner.display_name;\n  const imageArray = props.playlistObject.images;\n  //first image in imageArray is the biggest (index 0). use this and rescale down\n  const collaborative = props.playlistObject.collaborative;\n  if (props.toBeUsed) {\n    return (\n      <Card\n        className={classes.card}\n        bordered={true}\n        onClick={() => props.handleCardClick(props.playlistObject.id)}\n      >\n        <CardMedia\n          className={classes.albumImage}\n          component=\"img\"\n          image={imageArray[0].url}\n          title={playlistName + \" playlist cover\"}\n        />\n        <CardContent className={classes.textContainer}>\n          <Typography\n            className={classes.titlePadding}\n            align=\"center\"\n            variant=\"h4\"\n            component=\"h3\"\n          >\n            {playlistName}\n          </Typography>\n          <Divider />\n          <div className={classes.infoContainer}>\n            <Typography align=\"center\" variant=\"body1\">\n              <b>Owner:</b> {playlistOwner}\n            </Typography>\n            <Typography align=\"center\" variant=\"body1\">\n              <b>No. Songs:</b> {playlistNumTracks}\n            </Typography>\n            <Typography align=\"center\" variant=\"body1\">\n              <b>Collaborative:</b> {collaborative ? \"True\" : \"False\"}\n            </Typography>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  } else {\n    return (\n      <Card\n        className={classes.cardGrayscale}\n        bordered={true}\n        onClick={() => props.handleCardClick(props.playlistObject.id)}\n      >\n        <CardMedia\n          className={classes.albumImage}\n          component=\"img\"\n          image={imageArray[0].url}\n          title={playlistName + \" playlist cover\"}\n        />\n        <CardContent className={classes.textContainer}>\n          <Typography\n            className={classes.titlePadding}\n            align=\"center\"\n            variant=\"h4\"\n            component=\"h3\"\n          >\n            {playlistName}\n          </Typography>\n          <Divider />\n          <div className={classes.infoContainer}>\n            <Typography align=\"center\" variant=\"body1\">\n              <b>Owner:</b> {playlistOwner}\n            </Typography>\n            <Typography align=\"center\" variant=\"body1\">\n              <b>No. Songs:</b> {playlistNumTracks}\n            </Typography>\n            <Typography align=\"center\" variant=\"body1\">\n              <b>Collaborative:</b> {collaborative ? \"True\" : \"False\"}\n            </Typography>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n};\nexport default PlaylistCard;\n","/* eslint-disable no-loop-func */\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config\";\nimport hash from \"./hash\";\nimport axios from 'axios';\n/*\n  This function is the default api caller, and is called by each of api caller\n  functions below UNLESS I have created a custop fetching method. In reality, \n  this is the one of the few function I need, but including the ones below \n  improves clarity when calling for data. The functions in this file are not\n  supposed to do any data manipulation, only data fetching.\n\n  These functions return raw data. If the data is not retrieved well by the servers,\n  it will catch the rror (depending on if it's a response, request, or other error)\n*/\nasync function fetchAxios(token, call_url){\n  return axios({\n    method: \"GET\",\n    url: call_url,\n    headers: {\n      \"Authorization\": \"Bearer \" + token,\n    },\n  }).then((data) => { \n    return data\n  }).catch((error) => {\n    //this is taken from: https://gist.github.com/fgilio/230ccd514e9381fafa51608fcf137253\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        console.log(error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        console.log('Error', error.message);\n    }\n    console.log(error);\n  });\n}\n\nexport async function getUserInformation (token) {\n  // Make a call using the token\n  return fetchAxios(token, \"https://api.spotify.com/v1/me\");\n}\n/*\n  returns an array of playlist objects\n*/\nexport async function getPlaylistNames(token){\n  return fetchAllPlaylists(token);\n}\n/*\n  To ensure that I've gotten all of the playlists (not just the first page worth),\n  I need to call the playlist paging object and figure out how many total playlists\n  there are. I create a while loop that continues pulling playlist paging objects\n  as long as they exist, and adding each playlist to the array.\n*/\nasync function fetchAllPlaylists(token){\n  var all_playlists_array = [];\n  var next_page_exists = true;\n  var page = 1;\n  const limit = 50; //maximum\n  var offset = 0;\n  var current_url = \"https://api.spotify.com/v1/me/playlists?limit=\" + limit + \"&offset=\" + offset;\n  var paging_object = null;\n  while(next_page_exists){\n\n    //current_url is instantiated with the first call url, the paging object is updated\n    //after the first call. If the paging object is not null, it will get the url from the\n    //paging object, otherwise it will take it from the instantiation.\n    if(paging_object !== null)\n      current_url = paging_object.next;\n    console.log(\"Fetching playlists \" + offset + \" - \" + (offset + limit) );\n    let data = await axios({\n      method: \"GET\",\n      url: current_url,\n      headers: {\n        \"Authorization\": \"Bearer \" + token,\n      },\n    }).then((data) => {\n      if(data.data.next === null){\n        //break!\n        next_page_exists = false;\n      }\n      paging_object = data.data;\n      //console.log(\"data.data.items: \" + data.data.items);\n      all_playlists_array = all_playlists_array.concat(data.data.items); \n      //console.log(all_playlists_array);\n    }).catch((error) => {\n      //this is taken from: https://gist.github.com/fgilio/230ccd514e9381fafa51608fcf137253\n      // Error 😨\n      //need to break the loop\n      next_page_exists = false;\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          console.log(error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error\n          console.log('Error', error.message);\n      }\n      console.log(error);\n    });\n    offset = offset + 50;\n    page = page + 1;\n  }\n  console.log(all_playlists_array);\n  return all_playlists_array;\n}\nexport async function getAllSongs(token, first_page){\n  console.log(\"fetching songs\");\n  var all_songs_playlist = [];\n  var current_page = first_page;\n  console.log(\"get all songs, link: \" + current_page);\n  var call = 1;\n  while(current_page != null){\n    //make api call\n    let data = await axios({\n      method: \"GET\",\n      url: current_page,\n      headers: {\n        \"Authorization\": \"Bearer \" + token,\n      },\n    }).then((data) => {\n      var paging_object = data.data;\n      current_page = paging_object.next;\n      var current_call_songs = paging_object.items;\n      call++;\n      //the paging object items contains an array of playlist tracj=k objects, need to parse into the track object\n      var i;\n      const len = current_call_songs.length;\n      for(i = 0; i < len; i++){\n        all_songs_playlist.push(current_call_songs[i].track);\n      }\n     \n    }).catch((error) => {\n      //this is taken from: https://gist.github.com/fgilio/230ccd514e9381fafa51608fcf137253\n      // Error 😨\n      //need to break the loop\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n          if(error.response.status == 429){\n            console.log(\"429 error... waiting\");\n            console.log(\"headers: \" + error.response.headers);\n            var timeToWait = parseInt(error.response.headers[\"retry-after\"]);\n            console.log(\"waiting... \" + timeToWait + \"s\");\n            this.timeout(timeToWait*1000+1);\n          }\n          else{\n            current_page = null;\n          }\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          \n        current_page = null;\n          console.log(error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error \n          current_page = null;\n          console.log('Error', error.message);\n      }\n      console.log(error);\n    });\n  }\n  console.log(\"ALL SONG PLAYLIST\");\n  console.log(all_songs_playlist);\n  return all_songs_playlist;\n}\nexport async function getSongObjects(token, songArrayVar){\n  //need to parse the array into comma separated lists of max length 100 songs,\n  console.log(\"GETTING SONG OBJECTS\");\n  var songArray = songArrayVar.slice();\n  var song_object_list = [];\n  var call_link = \"https://api.spotify.com/v1/audio-features\";\n  var songs_left = true;\n  while(songs_left == true){\n    //create song object call link\n    var id_list = \"\";\n    var i = 0;\n    while(songArray.length > 0 && i < 100){\n      if(i%100 != 0){ //to ensure the last one doesn't have a comma, we put commas at the front\n        id_list += \",\";\n      }\n      id_list += songArray.pop().id;\n      i++;\n    }\n    //console.log(\"i: \" + i);\n    if(songArray.length === 0){\n      songs_left = false;\n    }\n    //console.log(\"COMMA LIST: \" + id_list);\n\n    //now that we have created the link, we need to call the api with that link\n    let data = await axios({\n      method: \"GET\",\n      url: call_link,\n      params: {\n        ids: id_list,\n      },\n      headers: {\n        \"Authorization\": \"Bearer \" + token,\n      },\n    }).then((data) => {\n      var features = data.data.audio_features;\n      //console.log(\"FEATURES\");\n      //console.log(features);\n      features.forEach(songObj => {\n        song_object_list.push({id: songObj.id, song_analysis: songObj});\n      });\n    }).catch((error) => {\n      //this is taken from: https://gist.github.com/fgilio/230ccd514e9381fafa51608fcf137253\n      // Error 😨\n      //need to break the loop\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n          if(error.response.status == 429){\n            console.log(\"429 error... waiting\");\n            console.log(\"headers: \" + error.response.headers);\n            var timeToWait = parseInt(error.response.headers[\"retry-after\"]);\n            console.log(\"waiting... \" + timeToWait + \"s\");\n            this.timeout(timeToWait*1000+1);\n          }\n          else{\n            songs_left = false;\n          }\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          \n          songs_left = false;\n          console.log(error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error \n            songs_left = false;\n          console.log('Error', error.message);\n      }\n      console.log(error);\n    });\n\n  }\n  //console.log(\"ALL SONG OBJECT PLAYLIST\");\n  //console.log(song_object_list);\n  console.log(\"---------------------------------------\");\n  return song_object_list;\n}\n// export async function getNextPlaylistPage(token, next_page_call){\n//   return fetchAxios(token, next_page_call);\n// }\n// export async function getPrevPlaylistPage(token, prev_page_call){\n//   return fetchAxios(token, prev_page_call);\n// }\nfunction timeout(ms) { //pass a time in milliseconds to this function\n  return new Promise(resolve => setTimeout(resolve, ms));\n}","import React, { useState } from \"react\";\n\nimport { VictoryTheme, VictoryScatter, VictoryChart, VictoryLabel, VictoryAxis } from \"victory\";\n\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n  \n  function createChartData(domain, range, props){\n    var dataset = [];\n    var domainName = domain;\n    var rangeName = range;\n    //need to create a data set with x and y\n    props.allSongsArray.forEach(songObj => {\n      if(songObj === undefined){\n        console.log(\"undefined\");\n        console.log(songObj);\n      }\n      if(songObj === null){\n        console.log(\"null\");\n        console.log(songObj);\n      }\n      if(songObj[\"song_analysis\"] === undefined){\n        console.log(\"song analysis undefined\");\n        console.log(songObj);\n      }\n      if(songObj[\"song_analysis\"] === null){\n        console.log(\"song analysis null\");\n        console.log(songObj);\n      }\n      dataset.push({\n        x: songObj[\"song_analysis\"][domainName],\n        y: songObj[\"song_analysis\"][rangeName],\n        label_text: songObj[\"name\"] + \": \" + songObj[\"song_analysis\"][domainName] + \",\" + songObj[\"song_analysis\"][rangeName],\n      })\n    });\n    return dataset;\n  }\n  function calculateDomain(domain, range){\n    var domainObj = {};\n    var domainName = domain;\n    var rangeName = range;\n    switch(domainName){\n      case \"acousticness\":\n        domainObj.x = [0, 1];\n        break;\n      case \"danceability\":\n        domainObj.x = [0, 1];\n        break;\n      case \"energy\":\n        domainObj.x = [0, 1];\n        break;\n      case \"instrumentalness\":\n        domainObj.x = [0, 1];\n        break;\n      case \"liveness\":\n        domainObj.x = [0, 1];\n        break;\n      case \"loudness\":\n        domainObj.x = [-60, 0];\n        break;\n      case \"speechiness\":\n        domainObj.x = [0, 1];\n        break;\n      case \"valence\":\n        domainObj.x = [0, 1];\n        break;\n      case \"tempo\":\n        domainObj.x = [0, 250];\n        break;\n      default:\n        domainObj.x = [0, 100];\n    }\n    switch(rangeName){\n      case \"acousticness\":\n        domainObj.y = [0, 1];\n        break;\n      case \"danceability\":\n        domainObj.y = [0, 1];\n        break;\n      case \"energy\":\n        domainObj.y = [0, 1];\n        break;\n      case \"instrumentalness\":\n        domainObj.y = [0, 1];\n        break;\n      case \"liveness\":\n        domainObj.y = [0, 1];\n        break;\n      case \"loudness\":\n        domainObj.y = [-60, 0];\n        break;\n      case \"speechiness\":\n        domainObj.y = [0, 1];\n        break;\n      case \"valence\":\n        domainObj.y = [0, 1];\n        break;\n      case \"tempo\":\n        domainObj.y = [0, 250];\n        break;\n      default:\n        domainObj.y = [0, 100];\n    }\n    return domainObj;\n  }\n  export default function SongGraph(props){\n    const useStyles = makeStyles((theme) => ({\n      root: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '80vh',\n        color: 'black',\n      },\n      titlediv: {\n        height: '5vh',\n      },\n      dropdownDiv: {\n        display: \"flex\",\n        flexDirection: 'row',\n        height: '7vh',\n      },\n      dropdownItem: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '50%',\n      },\n      dropDown: {\n        height: \"10%\",\n        width: \"40%\",\n        pointerEvents: \"default\",\n      },\n      labelText: {\n        pointerEvents: \"none\",\n      },\n      graphDiv: {\n        height: '68vh',\n      }\n    }));\n    const classes = useStyles();\n    const [domain, setDomain] = React.useState(\"danceability\");\n    const [range, setRange] = React.useState(\"energy\");\n    const [updateView, setUpdateView] = React.useState(\"\");\n\n    var domainObj = calculateDomain(domain, range);\n    const options = [\n      'acousticness', 'danceability', 'energy', 'instrumentalness', 'liveness',\n      'loudness', 'speechiness', 'valence', 'tempo'\n    ];    \n    const onSelectX = (option) => {\n      setDomain(option.value);\n    }\n    const onSelectY = (option) => {\n      setRange(option.value);\n    }\n    return (\n      <Box className={classes.root}>\n        <div className={classes.titleDiv}>\n          <Typography align='center' color='black' variant=\"h2\" component=\"h1\">\n            Song Graph\n          </Typography>\n        </div>\n        <div className={classes.dropdownDiv}>\n          <div className={classes.dropdownItem} >\n            <Typography align='center' color='black' variant=\"h4\" component=\"h2\">\n              Domain (x)\n            </Typography>\n            <Dropdown className={classes.dropDown} options={options} onChange={onSelectX} value={domain} placeholder=\"Select an option\" />\n          </div>\n          <div className={classes.dropdownItem} >\n            <Typography align='center' color='black' variant=\"h4\" component=\"h2\">\n              Range (y)\n            </Typography>\n            <Dropdown className={classes.dropDown} options={options} onChange={onSelectY} value={range} placeholder=\"Select an option\" />\n          </div>\n        </div>\n        <VictoryChart\n            theme={VictoryTheme.material}\n            domain={domainObj}\n            width={props.width}\n            height={props.height}\n        >\n            <VictoryScatter\n                style={{ data: { fill: \"#c43a31\" } }}\n                size={7}\n                data={createChartData(domain, range, props)}\n                labels={({datum}) => \"\"}\n                labelComponent={<VictoryLabel className={classes.labelText}/>}\n                events={[\n                  {\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseEnter: () => {\n                        return [{\n                          target: \"labels\",\n                          mutation: (props) => {\n                            setUpdateView(\"a\");\n                            console.log(props);\n                            return {text: props.datum.label_text};\n                          }\n                        }, {\n                          target: \"data\",\n                          mutation: (props) => {\n                            setUpdateView(\"b\");\n                            return { style: {fill: \"#dc625a\" }};\n                          }\n                        }];\n                      },\n                      onMouseLeave: () => {\n                        return [{\n                          target: \"labels\",\n                          mutation: (props) => {\n                            setUpdateView(\"c\");\n                            return {text: \"\"};\n                          }\n                        },\n                        {\n                          target: \"data\",\n                          mutation: (props) => {\n                            setUpdateView(\"d\");\n                            return null;\n                          }\n                        }];\n                      }\n                    }\n                  }\n                ]}\n            />\n            <VictoryAxis\n              crossAxis\n              domain={domainObj.x}\n              label={domain}\n              width={props.width}\n              height={props.height}\n              standalone={false}\n              axisLabelComponent={<VictoryLabel dy={20} />}\n            />\n            <VictoryAxis\n              dependentAxis\n              domain={domainObj.y}\n              label={range}\n              width={props.width}\n              height={props.height}\n              standalone={false}\n              axisLabelComponent={<VictoryLabel dy={-30} />}\n            />\n        </VictoryChart>\n      </Box>\n    );\n  }","import React, { Component } from \"react\";\n\nimport { VictoryPie, VictoryLegend, VictoryTooltip } from \"victory\";\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default class ArtistPieGraph extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n    };\n    this.popularArtistPieChart = this.popularArtistPieChart.bind(this);\n  }\n  componentDidMount() {\n  }\n\n  componentWillUnmount() {\n\n  }\n  popularArtistPieChart(){\n    var data = [];\n    var legendData = [];\n    var artistToSongMapVar = this.props.artistToSongMap;\n    var biggestArtistList = [];\n    var smallerArtistList = [];\n    const totalSections = 5;\n    const compare = (a, b) => {\n      // Use toUpperCase() to ignore character casing\n      const numA = a.y;\n      const numB = b.y;\n    \n      let comparison = 0;\n      if (numA > numB) {\n        comparison = 1;\n      } else if (numA < numB) {\n        comparison = -1;\n      }\n      return comparison*-1;\n    }\n    //iterate through each artist\n    //if the artist has more songs than someone in the \"biggestArtistList\",\n    //pop that artist and add the new artist to the biggestArtistLists\n    //add the old artist to the smallerArtistLists\n\n    Object.keys(artistToSongMapVar).forEach(function (key) {\n      var nameArtist = key;\n      var numSongs = artistToSongMapVar[key].length;\n      if(biggestArtistList.length < totalSections){\n        //must populate the bigestArtistList with the first 5 artists\n        biggestArtistList.push({x: nameArtist, y: numSongs, label: nameArtist + \", \" + numSongs + \" appearances\"});\n      }\n      else{\n        //if the current artist is bigger than the smallest artist of the biggest artists,\n        //move the smallest artist to the smallerArtistList, and add the new artist\n        //sorting the list to the smallest is at the end, so only have to check last location\n        biggestArtistList.sort(compare);\n        var smallestArtist = biggestArtistList[4];\n        if(numSongs > smallestArtist[\"y\"]){\n          biggestArtistList.pop();\n          biggestArtistList.push({x: nameArtist, y: numSongs, label: nameArtist + \", \" + numSongs + \" appearances\"});\n          smallerArtistList.push(smallestArtist);\n          \n          biggestArtistList.sort(compare);\n        }\n        else{\n          smallerArtistList.push({x: nameArtist, y: numSongs, label: nameArtist + \", \" + numSongs + \" appearances\"});\n        }\n      }\n      //data.push({x: key, y: artistToSongMapVar[key].length});\n    });\n    biggestArtistList.forEach(obj => {\n      data.push(obj)\n      legendData.push({name: obj.x});\n    });\n    \n    var numOther = 0;\n    smallerArtistList.forEach(obj => {numOther += obj.y});\n    if(numOther != 0){\n        data.push({x: \"Other\", y: numOther, label: \"Other, \" + numOther + \" appearances\"});\n        legendData.push({name: \"Other\"});\n    }\n    console.log(legendData);\n    \n    return [data, legendData];\n  }\n  render() {\n    const chartData = this.popularArtistPieChart();\n    return (\n      <div>\n        <svg viewBox=\"0 0 800 400\" style={{overflow:\"visible\"}}>\n            <VictoryLegend standalone={false}\n                title=\"Legend\"\n                centerTitle\n                x={80} y={80}\n                width={50} height={200}\n                padding={{top: 100, bottom: 100, left: 10}}\n                borderPadding={{ left: 15, right: 20 }}\n                colorScale={[\"tomato\", \"orange\", \"gold\", \"lightblue\", \"darkorchid\", \"lightgreen\"]}\n                style={{ border: { stroke: \"black\" }, }}\n                data={chartData[1]}\n            /> \n            <VictoryPie standalone={false}\n                padding={{ top: 50, bottom: 50, left: 100, right: -400}}\n                width={500} height={450}\n                colorScale={[\"tomato\", \"orange\", \"gold\", \"lightblue\", \"darkorchid\", \"lightgreen\"]}\n                labels={({datum}) => \"a\"}\n                labelComponent={\n                  <VictoryTooltip\n                    center\n                    cornerRadius={0}\n                    pointerLength={0}\n                    flyoutPadding={12}\n                    flyoutStyle={{\n                      stroke: \"black\",\n                      fill: \"white\"\n                    }}\n                  />\n                }\n                \n                data={chartData[0]}\n                events={[\n                  {\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        \n                        this.setState({A: \"a\"});\n                        return [\n                          {\n                            target: \"labels\",\n                            mutation: () => ({ active: true })\n                          }\n                        ];\n                      },\n                      onMouseOut: () => {\n                        \n                        this.setState({A: \"a\"});\n                        return [\n                          {\n                            target: \"labels\",\n                            mutation: () => ({ active: false })\n                          }\n                        ];\n                      }\n                    }\n                  }\n                ]}\n            />\n              \n      </svg>\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (orderBy === \"songname\" || orderBy === \"artists\") {\n    if (b[orderBy].localeCompare(a[orderBy]) < 0) {\n      return -1;\n    } else if (b[orderBy].localeCompare(a[orderBy]) > 0) {\n      return 1;\n    }\n    return 0;\n  } else {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    } else if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\nconst createData = (songObj) => {\n  //songs may have multiple artists, will concatenate with commas\n  var artists = \"\";\n  var count = 0;\n  songObj.artists.forEach((artistObj) => {\n    if (count !== 0) {\n      artists += \", \";\n    }\n    artists += artistObj.name;\n    count++;\n  });\n  const songname = songObj.name;\n  const album = songObj.album.name;\n  const acousticness = songObj.song_analysis.acousticness;\n  const danceability = songObj.song_analysis.danceability;\n  const energy = songObj.song_analysis.energy;\n  const instrumentalness = songObj.song_analysis.instrumentalness;\n  const liveness = songObj.song_analysis.liveness;\n  const loudness = songObj.song_analysis.loudness;\n  const speechiness = songObj.song_analysis.speechiness;\n  const valence = songObj.song_analysis.valence;\n  const tempo = songObj.song_analysis.tempo;\n  return {\n    songname,\n    artists,\n    album,\n    acousticness,\n    danceability,\n    energy,\n    instrumentalness,\n    liveness,\n    loudness,\n    speechiness,\n    valence,\n    tempo,\n  };\n};\nfunction EnhancedTableHeader(props) {\n  const { order, orderBy, onRequestSort } = props;\n\n  const headerCells = [\n    {\n      id: \"songname\",\n      displayLabel: \"Song Name\",\n    },\n    { id: \"artists\", displayLabel: \"Artist(s)\" },\n    { id: \"album\", displayLabel: \"Album\" },\n    { id: \"acousticness\", displayLabel: \"Acousticness\" },\n    { id: \"danceability\", displayLabel: \"Danceability\" },\n    { id: \"energy\", displayLabel: \"Energy\" },\n    { id: \"instrumentalness\", displayLabel: \"Instrumentalness\" },\n    { id: \"liveness\", displayLabel: \"Liveness\" },\n    { id: \"loudness\", displayLabel: \"Loudness\" },\n    { id: \"speechiness\", displayLabel: \"Speechiness\" },\n    { id: \"valence\", displayLabel: \"Valence\" },\n    { id: \"tempo\", displayLabel: \"Tempo\" },\n  ];\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  return (\n    <TableHead>\n      <TableRow>\n        {headerCells.map((header) => (\n          <TableCell\n            key={header.id}\n            sortDirection={orderBy === header.id ? order : false}\n            align=\"right\"\n          >\n            <TableSortLabel\n              active={orderBy === header.id}\n              direction={orderBy === header.id ? order : \"asc\"}\n              onClick={createSortHandler(header.id)}\n            >\n              {header.displayLabel}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\nEnhancedTableHeader.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n};\n\nexport default function SongTable(props) {\n  const [rows, setRows] = React.useState(\n    props.songList.map((songObj) => {\n      return createData(songObj);\n    })\n  );\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"songname\");\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  return (\n    <Paper>\n      <TableContainer style={{ maxHeight: \"80vh\" }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <EnhancedTableHeader\n            order={order}\n            orderBy={orderBy}\n            onRequestSort={handleRequestSort}\n          />\n          <TableBody>\n            {stableSort(rows, getComparator(order, orderBy)).map((row) => (\n              <TableRow hover key={row.songname}>\n                <TableCell align=\"right\" component=\"th\" scope=\"row\">\n                  {row.songname}\n                </TableCell>\n                <TableCell align=\"right\">{row.artists}</TableCell>\n                <TableCell align=\"right\">{row.album}</TableCell>\n                <TableCell align=\"right\">{row.acousticness}</TableCell>\n                <TableCell align=\"right\">{row.danceability}</TableCell>\n                <TableCell align=\"right\">{row.energy}</TableCell>\n                <TableCell align=\"right\">{row.instrumentalness}</TableCell>\n                <TableCell align=\"right\">{row.liveness}</TableCell>\n                <TableCell align=\"right\">{row.loudness}</TableCell>\n                <TableCell align=\"right\">{row.speechiness}</TableCell>\n                <TableCell align=\"right\">{row.valence}</TableCell>\n                <TableCell align=\"right\">{row.tempo}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n}\n","import React, { Component } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { getAllSongs, getSongObjects } from \"../APIHandler.js\";\nimport { VictoryPie, VictoryLegend } from \"victory\";\nimport \"./AnalysisPage.css\";\nimport SongGraph from \"../SongGraph.js\"\nimport ArtistPieGraph from \"../ArtistPieGraph.js\"\nimport _ from \"lodash\";\nimport Button from '@material-ui/core/Button';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SongTable from \"../SongTable.js\"\nimport BarLoader from \"react-spinners/BarLoader\";\n\nexport default class AnalysisPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      width: 0,\n      height: 0\n    };\n    //filtered list of playlists will be passed into props as\n    //filteredPlaylists\n    this.getAllSongs = getAllSongs.bind(this);\n    this.getSongObjects = getSongObjects.bind(this);\n    this.createSongArray = this.createSongArray.bind(this);\n    this.calculateMostPopularGenre = this.calculateMostPopularGenre.bind(this);\n    this.createArtistToSongMap = this.createArtistToSongMap.bind(this);\n    this.createAnalysisArray = this.createAnalysisArray.bind(this);\n    this.handleTabSwitch = this.handleTabSwitch.bind(this);\n    this.renderTab = this.renderTab.bind(this);\n    this.renderPopularArtistTab = this.renderPopularArtistTab.bind(this);\n    this.renderSongScatterTab = this.renderSongScatterTab.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.renderSongChart = this.renderSongChart.bind(this);\n  }\n  componentWillMount (){\n    this.setState({loading: true});\n  }\n  async componentDidMount() {\n    //Progression of API Calls / Filtering of this function\n    //1. (API CALL) get an array of all songs in the playlists selected\n    //  1a. remove all duplicates from these songs (done with lodash library)\n    //2. (API CALL) get an array of the \"music analysis\" of all of the\n    //   songs in the playlists selected\n    //3. Pair/Add these music analysis objects to the song object from 1.\n    //4. Create the artist to song map, set state.\n\n    //1\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    var allSongs = await this.createSongArray(this.props.filteredPlaylists);\n    console.log(allSongs);\n    //let [someResult, anotherResult] = await Promise.all([someCall(), anotherCall()]);\n    //2\n    //MUST USE SLICE HERE BECAUSE THE ALLSONGS ARRAY CLEARS IF YOU DO NOT????\n    var musicAnalysisArray = await this.createAnalysisArray(allSongs.slice());\n    console.log(musicAnalysisArray);\n    //3\n    musicAnalysisArray.forEach(songObj => {\n      allSongs.find(x => x.id === songObj.id).song_analysis \n        = songObj.song_analysis;\n    });\n    \n    //4\n    this.setState({artistToSongMap: this.createArtistToSongMap(allSongs),\n                   allSongsArray: allSongs,\n                  loading: false,\n                  currentTab: \"songScatter\"});\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n  async createSongArray(playlists) {\n    /*\n        This function will return an array of all of the songs in all of the playlists\n        passed through this.props.filteredPlaylists. It has to do this by calling the\n        api for each playlist, hence the use of the APIHandler.\n    */\n    \n    var promiseList = [];\n    var i;\n    const numPlaylists = playlists.length;\n    for(i = 0; i < numPlaylists; i++){\n      var playlist = playlists[i];\n      if(playlist.tracks != null){\n        const callURL = playlist.tracks.href;\n        promiseList.push(getAllSongs(this.props.token, callURL));\n      }\n    }\n    var allSongsArray = [];\n    const values = await Promise.all(promiseList);\n    values.forEach( value => {\n      allSongsArray = [...allSongsArray, ...value];\n    });\n    const uniqueSongsArray = _.uniqBy(allSongsArray, \"id\");\n    return uniqueSongsArray;\n  }\n  async createAnalysisArray(songsList){\n    const analysisPromise = await this.getSongObjects(this.props.token, songsList);\n    return analysisPromise;\n  }\n  createArtistToSongMap(songArray){\n    var artistDictionary = {};\n    var i = 0;\n    songArray.forEach((song) => {\n      //grab the genre\n      if(song === null){\n        console.log(\"Null Song @ \" + i);\n      }\n      else{\n        var artistsList = song.artists; //list of artists on current song\n        \n        //iterate through each artist, adding this song to their array\n        artistsList.forEach((artistObject) => {\n          //if the artist doesnt exist already, add them to the dictionary\n          if(artistDictionary[artistObject.name] === undefined){\n            //console.log(\"First time artist, \" + artistObject.name);\n            artistDictionary[artistObject.name] = [song];\n          }\n          //else, the artist already exists. Pop the array, add the new song, update\n          //the dictionary\n          else{\n            var artistSongArray = artistDictionary[artistObject.name];\n            if(!artistSongArray.some(e => e.id === song.id)){\n              //no element in artistSongArray has the same id as the current song\n              artistSongArray.push(song);\n              artistDictionary[artistObject.name] = artistSongArray;\n            }\n            else{\n              //console.log(song.name + \" tried to add twice\");\n            }\n          }\n        });\n      }\n      i++;\n    });\n    console.log(artistDictionary);\n    return artistDictionary;\n  }\n  calculateMostPopularGenre(songArray) {\n    /*\n        This function will calcualte the most popular genre given an array of songs\n        I will create a dictionary with the keys being genres and the values being \n        arrays of songs. To calculate the most popular genre, I will simply find the\n        key with the largest array. It will return an object containing the name of\n        the genre (string), and the number of songs in the genre (int).\n    */\n    /* \n      Uh oh, the song doesn't have a genre specification, only the artist does.\n      I need to access the api for every artist, can get 50 artists per api call.\n      I can iterate through the songs, then create a dictionary with artist id as\n      the key and an array of their songs as the value. This could be useful for the\n      most popular artist tab as well.\n    */\n    var genreDictionary = {};\n    songArray.forEach((song) => {\n      //grab the genre\n      console.log(song.name);\n    });\n  }\n  handleTabSwitch(pageName) {\n    this.setState({currentTab: pageName});\n  }\n  renderTab(){\n    const tabName = this.state.currentTab;\n    if(tabName === \"songScatter\"){\n      return this.renderSongScatterTab();\n    }\n    else if(tabName === \"popularArtists\"){\n      return this.renderPopularArtistTab();\n    }\n    else{\n      return this.renderSongChart();\n    }\n  }\n  renderPopularArtistTab(){\n    const divHeight = (this.state.height * 0.8 - 40) * 0.9;\n    const divWidth = this.state.width * 0.7;\n    return (\n      <div className=\"popularArtistChartContainer\">\n        <Typography className=\"dataCardHeader\" align='center' component='h1' variant='h2'>\n          Most Popular Artists\n        </Typography>\n        <ArtistPieGraph artistToSongMap={this.state.artistToSongMap} />\n      </div>\n    );\n  }\n  renderSongScatterTab(){\n    //will calculate the size of the container that SongGraph is being rendered into\n    //because the dynamic sizing of Victory Graphs is not working properly\n    const divHeight = (this.state.height * 0.8 - 40) * 0.9;\n    const divWidth = this.state.width * 0.7;\n    return (\n      <div className=\"songPlotContainer\">\n        <SongGraph width={divWidth} height={divHeight} \n        allSongsArray={this.state.allSongsArray}/>\n      </div>\n    );\n  }\n  renderSongChart(){\n    return (\n      <div className=\"songChartContainer\">\n        <SongTable songList={this.state.allSongsArray}/>\n      </div>\n    );\n  }\n  render() {\n    const dataPage = this.renderTab();\n    return (\n      <div className=\"AnalysisPage\">\n        {this.state.loading === true && (\n          <div>\n            <BarLoader\n              color=\"#FFFFFF\"\n              height={10}\n              width={400}\n              loading={this.state.loading}\n            />\n            <div className=\"loading-text\">\n              Fetching the data <br />\n              Hold tight!\n\n            </div>\n            \n          </div>\n        )}\n        {this.state.loading === false && (\n          <div className=\"AnalysisPageBody\">\n            <div className=\"tabContainer\">\n              <Button variant=\"contained\" color=\"primary\" onClick={() => this.handleTabSwitch(\"songScatter\")}>Song Scatter</Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={() => this.handleTabSwitch(\"popularArtists\")}>Artist Pie Chart</Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={() => this.handleTabSwitch(\"songList\")}>Songs List</Button>\n            </div>\n            <div className=\"dataContainer\">\n              {dataPage}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"../config\";\nimport hash from \"../hash\";\nimport PlaylistCard from \"../PlaylistCard.js\";\nimport \"./DataPage.css\";\nimport { getUserInformation, getPlaylistNames } from \"../APIHandler.js\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { sizing } from '@material-ui/system';\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AnalysisPage from \"./AnalysisPage.js\";\n\nexport default class DataPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      token: null,\n      user_info: {\n        display_name: \"\",\n        id: \"\",\n      },\n      no_user_data: true,\n      no_playlist_data: true,\n      playlists: null,\n      number_playlists: 0,\n      showAnalysis: false,\n      numSelectedPlaylists: 0,\n    };\n    this.getUserInformation = getUserInformation.bind(this);\n    this.getPlaylistNames = getPlaylistNames.bind(this);\n    this.removeNonOwnedPlaylists = this.removeNonOwnedPlaylists.bind(this);\n    this.createPlaylistCards = this.createPlaylistCards.bind(this);\n    this.handleCardClick = this.handleCardClick.bind(this);\n    this.selectAllPlaylists = this.selectAllPlaylists.bind(this);\n    this.deselectAllPlaylists = this.deselectAllPlaylists.bind(this);\n    this.handleGoClick = this.handleGoClick.bind(this);\n    this.filterPlaylists = this.filterPlaylists.bind(this);\n    this.selectOwnedPlaylists = this.selectOwnedPlaylists.bind(this);\n  }\n\n  async componentDidMount() {\n    // Set token\n    let _token = hash.access_token;\n\n    if (_token) {\n      // Set token\n      this.setState({\n        token: _token,\n      });\n\n      // --------------------------- Get User Information --------------------------- \\\\\n      const userInfo = await getUserInformation(_token);\n      console.log(\"fetched user information...\" + userInfo);\n      if (userInfo) {\n        this.setState({ user_info: userInfo.data, no_user_data: false });\n      } else {\n        this.setState({ no_user_data: true });\n      }\n\n      // --------------------------- Get Playlist Information ----------------------- \\\\\n      console.log(\"Fetching playlist data\");\n      const playlists_data = await getPlaylistNames(_token);\n      console.log(\"done fetching playlists\");\n      if (playlists_data.length != null) {\n        //add clicked field to each object, default as true\n        playlists_data.forEach((playlist) => (playlist.toBeUsed = false));\n        this.setState({\n          playlists: playlists_data,\n          number_playlists: playlists_data.length,\n          numSelectedPlaylists: 0,\n          no_playlist_data: false,\n        });\n      } else {\n        this.setState({\n          playlists: [],\n          number_playlists: 0,\n          numSelectedPlaylists: 0,\n          no_playlist_data: true,\n        });\n      }\n      console.log(this.state.playlists);\n    }\n  }\n\n  componentWillUnmount() {\n    // clear the interval to save resources\n    clearInterval(this.interval);\n  }\n  removeNonOwnedPlaylists() {\n    var owned_playlists = [];\n    for (var i = 0; i < this.state.playlists.length; i++) {\n      if (this.state.playlists[i].owner.id === this.state.user_info.id) {\n        owned_playlists.push(this.state.playlists[i]);\n        //alert(this.state.playlists[i].name + \" is not owned by \" + this.state.user_info.display_name);\n      }\n    }\n    this.setState({ playlists: owned_playlists });\n  }\n  createPlaylistCards() {\n    //this method is only called from the render method\n    //a precursor to the call is the existence of playlist data\n    //therefore this method should always have playlist data to work with\n    return (\n      <Grid container justify=\"center\" align=\"center\" spacing={3}>\n        {\n          this.state.playlists.map((playlistObj) => (\n            <Grid item xs={6}>\n              <PlaylistCard \n                playlistObject={playlistObj}\n                toBeUsed={playlistObj.toBeUsed}\n                handleCardClick={this.handleCardClick}\n              />  \n            </Grid>\n          ))\n        }\n      </Grid>\n    );\n  }\n  handleCardClick(id) {\n    //find playlist with the correct id\n    var tempPlaylists = this.state.playlists;\n    var numSelectedDelta = 0;\n    tempPlaylists.forEach((playlist) => {\n      if (playlist.id === id) {\n        //flip clicked boolean\n        if(playlist.toBeUsed === true){\n          //deselect playlist, decrement number of selected playlists\n          numSelectedDelta = -1;\n        }\n        else{\n          //select playlist, increment number of selected playlists\n          numSelectedDelta = 1;\n        }\n        playlist.toBeUsed = !playlist.toBeUsed;\n      }\n    });\n    this.setState( (prevState) => { \n      return{\n        playlists: tempPlaylists, \n        numSelectedPlaylists: prevState.numSelectedPlaylists + numSelectedDelta,\n      }\n    });\n  }\n\n  //The following two functions are only called if the playlist data is not null\n  //based on the conditional rendering in the render function\n  selectAllPlaylists() {\n    //get playlist array from state and put into temp array\n    var tempPlaylists = this.state.playlists;\n    //iterate through all playlists set toBeUsed to true\n    tempPlaylists.forEach((playlist) => {\n      playlist.toBeUsed = true;\n    });\n    //set state to new playlist array\n    this.setState({ playlists: tempPlaylists, numSelectedPlaylists: tempPlaylists.length });\n  }\n  deselectAllPlaylists() {\n    //get playlist array from state and put into temp array\n    var tempPlaylists = this.state.playlists;\n    console.log(tempPlaylists);\n    //iterate through all playlists set toBeUsed to false\n    tempPlaylists.forEach((playlist) => {\n      playlist.toBeUsed = false;\n    });\n    //set state to new playlist array\n    this.setState({ playlists: tempPlaylists, numSelectedPlaylists: 0 });\n  }\n  selectOwnedPlaylists(){\n    var tempPlaylists = this.state.playlists;\n    var playlistsIncluded = 0;\n    //iterate through all non-owned playlists, set toBeUsed to false\n    tempPlaylists.forEach((playlist) => {\n      if(playlist.owner.id !== this.state.user_info.id){\n        playlist.toBeUsed = false;\n      }\n      else{\n        playlist.toBeUsed = true;\n        playlistsIncluded++;\n      }\n    });\n    //set state to new playlist array\n    this.setState({ playlists: tempPlaylists, numSelectedPlaylists: playlistsIncluded });\n  }\n  handleGoClick(){\n    this.setState({showAnalysis: true});\n  }\n  //Iterates through all playlists, returns array of playlists that have been selected\n  filterPlaylists(){\n    var filteredArray = [];\n    this.state.playlists.forEach(playlist => {\n      if(playlist.toBeUsed == true){\n        filteredArray.push(playlist);\n      }\n    });\n    return filteredArray;\n  }\n  render() {\n    const numSelectedPlaylists = this.state.numSelectedPlaylists;\n    const numTotalPlaylists = this.state.number_playlists;\n    var cardList = null;\n    if (!this.state.no_playlist_data) {\n      cardList = this.createPlaylistCards();\n    }\n    //console.log(\"rendering datapage\");\n    return (\n      <div className=\"data-page-main\">\n        {!this.state.token && (\n          <div className=\"error-header\">\n              <div>\n                <h1>You dont seem to be logged in to Spotify</h1>\n                <h3>Go back to the home page to log in</h3>\n                <Link to=\"/\">\n                  <Button variant=\"contained\" color=\"primary\">Home</Button>\n                </Link>\n              </div>\n            \n          </div>\n        )}\n        {this.state.token && !this.state.no_playlist_data && !this.state.showAnalysis && (\n          <Box>\n            <div className=\"above-playlist-container\"> \n              <Typography color='white' align=\"center\" component='h1' variant='h2'>\n                Pick some Playlists to Analyze\n              </Typography>\n            </div>\n            <Paper className=\"data-body\" elevation={10}>\n              <Box className=\"sorting-button-container\">\n                <Typography color=\"black\" align=\"center\" component=\"h3\" variant=\"h3\">\n                  Filter Playlists\n                </Typography>\n                <Box py={2}>\n                  <Button className=\"filter-buttons\" variant=\"contained\" color=\"secondary\" onClick={() => this.selectAllPlaylists()}>Select All</Button>\n                </Box>\n                <Box py={2}>\n                  <Button className=\"filter-buttons\" variant=\"contained\" color=\"secondary\" onClick={() => this.deselectAllPlaylists()}>Remove All</Button>\n                </Box>\n                <Box py={2}>\n                  <Button className=\"filter-buttons\" variant=\"contained\" color=\"secondary\" onClick={() => this.selectOwnedPlaylists()}>Owned by Me</Button>\n                </Box>\n                <div style={{marginTop: \"auto\"}}></div>\n                <Typography color=\"black\" align=\"center\" component=\"h4\" variant=\"subtitle1\">\n                  {numSelectedPlaylists} Playlists Selected\n                </Typography>\n                <Typography color=\"black\" align=\"center\" component=\"h4\" variant=\"subtitle1\">\n                  {numTotalPlaylists} Playlists Total\n                </Typography>\n              </Box>\n              <Box className=\"card-container\">\n                {cardList}\n              </Box>\n            </Paper>\n            \n            <Box className=\"footer\">\n              <Button className=\"footer-button\" variant=\"contained\" color=\"primary\" onClick={() => this.handleGoClick()}>Go</Button>\n            </Box>\n          </Box>\n        )}\n        {this.state.showAnalysis && this.state.token && (\n          <AnalysisPage filteredPlaylists={this.filterPlaylists()} token={this.state.token}/>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"../config\";\nimport hash from \"../hash\";\nimport axios from 'axios';\nexport default class AboutPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n    };\n  }\n\n  async componentDidMount() {\n    // Set token\n  }\n\n  componentWillUnmount() {\n\n  }\n  render() {\n    return (\n      <div className=\"AboutPage\">\n        <h1>Welcome to the about page!</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { authEndpoint, clientId, redirectUri, scopes } from \"./config\";\nimport axios from \"axios\";\nimport hash from \"./hash\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport HomePage from \"./pages/HomePage.js\";\nimport DataPage from \"./pages/DataPage.js\";\nimport AboutPage from \"./pages/AboutPage.js\";\nimport AnalysisPage from \"./pages/AnalysisPage.js\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      auth_token: null,\n    };\n    //If token is null then the user has not logged in\n  }\n\n  async componentDidMount() {\n    let _token = hash.access_token;\n    this.setState({ auth_token: _token });\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    return (\n        <Router>\n          <div className=\"App\">\n            <body>\n              <Switch>\n                <Route path=\"/about\">\n                  <AboutPage />\n                </Route>\n                <Route path=\"/data\">\n                  <DataPage auth_token={this.state.auth_token} />\n                </Route>\n                <Route path=\"/\">\n                  <HomePage auth_token={this.state.auth_token} />\n                </Route>\n              </Switch>\n            </body>\n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}